z2 <- FALSE
typeof(z1)
typeof(z2)
v1 <- 1 + 2i
typeof(v1)
str(v1)
rm(list= ls())
x <- c(1, 2, 3)
x <- c(1L, 2L, 3L)
x1 <- 1:3
x2 <- 1.2:3.2
x3 <- seq(1, 3, by = 1)
x4 <- numeric(3)
x5 <- integer(3)
x6 <- character(3)
x7 <- logical(3)
x7[2] <- TRUE
x4
x4[3] <- 5
x4
x8 <- c(F, T, F, T, F, T)
x8
x8[4] <- F
x8
U <- c(F)
U
typeof(U)
U[2] <- 2
typeof(U)
U
U[3] <- T
U
U <- "a"
typeof(U)
str(U)
U <- c(F)
U
typeof(U)
U[2] <- 2
typeof(U)
U
U[3] <- T
U
U[4] <- "a"
str(U)
V <- c(1, 2, 3, 4, 5)
names(V) <- c("a", "b", "c", "d", "e")
V
letters[1:5]
LETTERS[1:5]
rm(V)
V
rm(c(V, U))
rm(V, U)
V <- c(1, 2, 3, 4, 5)
names(V) <- c("a", "b", "c", "d", "e")
V
U[2] <- 2
U <- c(F)
U
typeof(U)
U[2] <- 2
typeof(U)
U
U[3] <- T
U
U[4] <- "a"
str(U)
rm(V, U)
U
V
rm(list = ls())
V <- c(1, 2, 3, 4, 5)
names(V) <- c("a", "b", "c", "d", "e")
setNames(V, LETTERS[1:5])
V = setNames(V, LETTERS[1:5])
V
V <- c(a1 = 1, a2 = 2, a3 = 3, a4 = 4, a5 = 5)
V
names(V)
is.atomic(V)
is.vector(V)
attr(V, "att1") <- 'habib'
V
rm(V)
V <- c(a1 = 1, a2 = 2, a3 = 3, a4 = 4, a5 = 5)
V
names(V)
is.atomic(V)
is.vector(V)
attr(V, "att1") <- "habib"
V
is.atomic(V)
is.vector(V)
1 + 2
2-1
1 /2
1*2
2^2
3 %% 2
5 %/% 2
V
7 %in% U
7 %in% V
3 %in% V
1 < 2
2 < 1
1 <= 2
2 <= 1
1 > 2
2 > 1
1 >= 2
2 >= 1
y <- 3
x <- 2
y <- 3
x > 3
y < 4
x | y
(x > 3) | (y < 4)
(x > 3) | (y < -2)
(x == 2) & (y == 3)
(x == 1) & (y == 3)
(x == 1) | (y == 3)
xor((x == 1), (y == 3))
xor((x == 2), (y == 3))
xor((x == 2), (y == 4))
x == 2
! x == 2
x != 3
length(V)
Sys.time()
Sys.date()
Sys.Date()
R.version
print(V)
V
x <- c(1, 2, 3, 4, 5)
y <- c(1, 2, 3)
temp1 <- x + y
temp1
temp2 <- x + 1
temp2
x2 <- c(letters[1:3])
x2
x3 <- c(letters[4:6])
x3
temp3 <- c(x2, x3)
temp3
x
x[x > 3]
x > 3
x[c(1, 2)]
x[c(3, 4)]
x <- 1:20
x <- c("a", "b", "c")
x[1:2]
## as.numeric, as.character, as.logical, as.vector
x <- c("1", "2", "3")
str(x)
as.numeric(x)
## as.numeric, as.character, as.logical, as.vector
x <- c("1", "2", "3", "a")
str(x)
as.numeric(x)
x
as.logical(x)
x <- matrix(1, nrow = 3, ncol = 3)
x
x2 <- matrix(c(1, 1, 1), nrow = 3, ncol = 3)
x2
x3 <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, ncol = 3)
x3
x3 <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, ncol = 3, byrow = T)
x3x3
x3
dimnames(x) = list(rows = letters[1:3], cols = LETTERS[1:3])
x
x[1, 2]
x3[1, 2]
x3[3, 2]
x3[2, ]
x3[, 2]
x3[3, x3 > 8]
x3[3, x3[3, ] > 8]
x3[3, x3 > 8]
x3[3, x3[3, ] > 8]
x3
x3[3, x3[3, ] > 7]
x3[x3[, 3] > 2], 3]
x3[x3[, 3] > 2, 3]
x3[x3[, 4] > 2, 3]
x3[x3[, 3] > 4, 3]
x2 <- c(-1, -2, -3)
cbind(x1, x2)
x1 <- c(1, 2, 3)
x2 <- c(-1, -2, -3)
cbind(x1, x2)
x4 <- cbind(x1, x2)
str(x4)
x4 <- rbind(x1, x2)
x4
x4
x4[1, 2] <- "a"
x4
x3 <- matrix(c(1, 2, 3, 4), 2, 2)
x3
x4 <- matrix(c(1, 2, 3, 4, 5, 6), 2, 3)
x4
x3 %*% x4
x4 %*% x3
array(data = 1:24, dim = c(2, 3, 4))
array(data = 1:24, dim = c(2, 3, 4), dimnames = list(rows = c("Yes", "No"),
cols = c("a", "b", "c"), Mats = LETTERS[1:4]))
arr1 <- array(data = 1:24, dim = c(2, 3, 4), dimnames = list(rows = c("Yes", "No"),
cols = c("a", "b", "c"), Mats = LETTERS[1:4]))
ftable(arr1)
ftable(arr1, col.vars = c("cols", "rows"), row.vars = "Mats")
x <- c(1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3)
table(x)
y <- c("a", "a", "a", "d", "d", "c", "c", "d", "d", "d")
table(x, y)
length(x)
length(y)
y <- c("a", "a", "a", "d", "d", "c", "c", "d", "d", "d", "d")
table(x, y)
tab1 <- table(x, y)
tab1[1, 2]
tab1[y == a]
tab1[y == "a"]
tab2 <- ftable(arr1, col.vars = c("cols", "rows"), row.vars = "Mats")
tab2
tab2[1, 1]
tab2[cols == "a"]
attributes(tab2)
tab2[tab2$col.vars$cols == "a"]
tab2[tab2$col.vars == "a"]
str(tab2)
tab2$col.vars
tab2
attr(tab2, "col.vars")
tab2[1, 3]
tab2
tab2[, 1:2]
maexample <- array(c(18, 15, 15, 13, 6, 9, 24, 28, 10, 4, 2, 6,
5, 1, 3, 1, 1, 1, 56, 12, 56, 21,
35, 8, 17, 34, 10, 17, 15, 19, 29, 44, 3, 13, 7, 16,
2, 3, 0, 2, 3, 0, 23, 9, 52, 31, 49, 51),
dim = c(2, 3, 2, 2, 2),
dimnames = list(Response = c("Yes", "No"),
Age = c("<30", "31-45", "46+"),
House = c("Apartment", "House"),
Tenure = c("Rent", "Own"),
Work = c("Skilled", "Unskilled")))
myexample <- array(c(18, 15, 15, 13, 6, 9, 24, 28, 10, 4, 2, 6,
5, 1, 3, 1, 1, 1, 56, 12, 56, 21,
35, 8, 17, 34, 10, 17, 15, 19, 29, 44, 3, 13, 7, 16,
2, 3, 0, 2, 3, 0, 23, 9, 52, 31, 49, 51),
dim = c(2, 3, 2, 2, 2),
dimnames = list(Response = c("Yes", "No"),
Age = c("<30", "31-45", "46+"),
House = c("Apartment", "House"),
Tenure = c("Rent", "Own"),
Work = c("Skilled", "Unskilled")))
myexample
ftable(myexample, row.vars = c("Work", "Tenure", "Response"),
col.vars = ("House", "Age"))
ftable(myexample, row.vars = c("Work", "Tenure", "Response"),
col.vars = c("House", "Age"))
myexample <- array(c(18, 15, 15, 13, 6, 9, 34, 28, 10, 4, 2, 6,
5, 1, 3, 1, 1, 1, 56, 12, 56, 21,
35, 8, 17, 34, 10, 17, 15, 19, 29, 44, 3, 13, 7, 16,
2, 3, 0, 2, 3, 0, 23, 9, 52, 31, 49, 51),
dim = c(2, 3, 2, 2, 2),
dimnames = list(Response = c("Yes", "No"),
Age = c("<30", "31-45", "46+"),
House = c("Apartment", "House"),
Tenure = c("Rent", "Own"),
Work = c("Skilled", "Unskilled")))
myexample
ftable(myexample, row.vars = c("Work", "Tenure", "Response"),
col.vars = c("House", "Age"))
library(contigencyTable2)
ls("package:contigencyTable2")
body(fun = "check_package")
args(check_package)
formals(check_package)
environment(check_package)
body(check_package)
library(tidyverse)
#| code-line-numbers:
set.seed(1234)
n <- 50
library(tidyverse)
dat <- tibble(x = rnorm(n, 2, 3),
x2 = rgamma(n, 2, 2),
x3 = rnorm(n, 4, 1),
y = 2*x2 - x3 + 3*x3 - rnorm(n, .5, .5))
Model <- lm(y ~ ., data = dat)
summary(Model)
reticulate::repl_python()
import pandas as pd
import numpy as np
x = [1, 2, 3]
x
py.dat
p.dat
r.dat
r.Model
#| echo: false
2 * 2
1 + 1
R.version
library(languageserver)
install.packages("languageserver")
list_1 <- list(1, 2, 3, 4)
str(list_1)
x1 <- data.frame(a1 = 1:4, a2 = letters[1:4],
a3 = rep(c(T, F), each = 2))
x1
x2 <- matrix(NA, 4, 3)
x2
list1 <- list(matrixx = x2, dataframm = x1,
vectorr = 1:10)
str(list1)
list1
list1$dataframm
object1 <- list1$dataframm
object1
object2 <- list1[['matrixx']]
object2
object3 <- list1["matrixx"]
object3
list1[1]
list1$vectorr <- NULL
list1
list1$new_object = data.frame(x1 = rep(1, 4), x2 = rep(2, 4),
x3 = LETTERS[1:4]))
list1$new_object = data.frame(x1 = rep(1, 4), x2 = rep(2, 4),
x3 = LETTERS[1:4])
list1
list1[['newobject2']] <- matrix(1, 2, 2)
list1
append(list1, new_boject3 = c(1, 2, 3, 4))
append(list1, 'new_boject3' = c(1, 2, 3, 4))
append(list1, c(1, 2, 3, 4))
append(list1, c(1, 2, 3, 4))
append(list1, c(1, 2, 3, 4))
list1
length(list1)
list1[[4]]
list1[[4]][1, 1]
lengths(list1)
list1$vector2 <- 1:5
list1
lengths(list1)
f <- function(x) x + 1
list1$f = f
list1
factor(c(1, 2, 3, 4))
y1 <- factor(c(1, 2, 3, 4))
y1
y1 <- factor(c(1, 2, 3, 4, 1, 2, 3, 4, 4, 4))
y1
y1 <- factor(c(1, 2, 3, 4, 1, 2, 3, 4, 4, 4), levels = letters[1:4])
y1
y1 <- factor(rep(letters[1:4], each = 5), levels = letters[1:4])
y1
summary(y1)
y2 <- rep(letters[1:4], each = 5)
summary(y2)
table(y2)
y3 <- factor(1:4, ordered = TRUE)
y3
y4 <- factor(c(5, 2, 3, 1, 7), ordered = T)
y4
y5 <- factor(c("sad", "happy", "veryhappy", "neutral"), ordered = T)
y5
y5 <- factor(c("sad", "happy", "veryhappy", "neutral"),
levels = c("sad", "neutral", "happy",
"veryhappy"), ordered = T)
y5
formals(f)
body(f)
environment(f)
g <- function(x, y) {
a <- x/2
b <- y/2
c <- a * b
return(c)
}
formals(g)
body(g)
environment(g)
g(x = 2, y = 3)
A <- matrix(1, 2, 2)
B <- matrix(2, 2, 2)
A
B
C1 <- A %*% B
C2 <- `%*%`(A, B)
C1
C2
1 + 2
`+`(1, 2)
`%++%` <- function(x, y) paste(x, y, sep = " ")
"habib" %++% "R"
`%++%`("habib", "R")
x <- 1:10
x
x[2]
`[`(x, 2)
g2 <- function(x1, x2, x3) {
a <- log(x1)
b <- exp(x2)
d <- sqrt(x3)
}
return(a + b + c)
g2 <- function(x1, x2, x3) {
a <- log(x1)
b <- exp(x2)
d <- sqrt(x3)
return(a + b + c)
}
g2(1, 2, 1)
g2 <- function(x1, x2, x3) {
a <- log(x1)
b <- exp(x2)
d <- sqrt(x3)
return(a + b + d)
}
g2(1, 2, 1)
g2 <- function(x1 = 1, x2 = 2, x3 = 1)
g2()
g2 <- function(x1 = 1, x2 = 2, x3 = 1) {
a <- log(x1)
b <- exp(x2)
d <- sqrt(x3)
return(a + b + d)
}
g2()
g2(x1 = 10)
g3 <- function() {
x <- 10
y <- x * 2
return(exp(y) * log(x))
}
g3()
body(sum)
X1 <- c("قهوه
‌ای", "قهوه
‌ای", "قهوه
‌ای", "سیاه", "سیاه", "سیاه")
X2 <- c(159, 160, 160, 166, 169, 170)
X3 <- c(22, 23, 25, 27, 21, 23)
y <- data.frame(X1, X2, X3)
rownames(y) <- c("صدیقه", "فاطمه", "محدثه", "مدیحه", "پرنیا", "۲فاطمه")
y
library(Rcmdr)
install.packages("Rcmdr")
library(Rcmdr)
q()
Sys.setlocale(locale = "persian")
load("E:/habib_R_course/R_class_in_vs_code/for_kir.xlsx")
library(readxl)
for_kir <- read_excel("E:/habib_R_course/R_class_in_vs_code/for_kir.xlsx")
View(for_kir)
ls()
for_kir$حبیب
rm(list = ls())
getwd()
rm(list = ls())
library(readxl)
for_kir <- read_excel("E:/habib_R_course/R_class_in_vs_code/for_kir.xlsx")
View(for_kir)
for_kir$حبیب
for_kir$حبیب[1] <- "tess"
attach(for_kir)
حبیب[]
حبیب |> _[1]
rm(list = ls())
dat <- read.csv(file = "Persian_file.txt", sep = ";", header = TRUE)
head(dat)
dat <- read.csv(file = "Persian_file.txt", sep = ";", header = TRUE)
pp <- "E:\\habib_R_course\\R_class_in_vs_code\\"
setwd(pp)
# Sys.getlocale (category = "LC_ALL")
# Sys.setlocale (category = "LC_ALL", locale = "persian")
dat <- read.csv(file = "Persian_file.txt", sep = ";", header = TRUE)
head(dat)
dat[1, 1]
# Sys.getlocale (category = "LC_ALL")
Sys.setlocale (category = "LC_ALL", locale = "persian")
dat <- read.csv(file = "Persian_file.txt", sep = ";", header = TRUE)
head(dat)
dat <- read.csv(file = "Persian_file.txt", sep = ";", header = TRUE,
encoding = "UTF-8")
head(dat)
dat[1, 1]
dat <- read.csv(file = "Persian_file.txt", sep = ";", header = TRUE,
encoding = "UTF-8")
head(dat)
dat[1, 1]
pp <- "E:\\habib_R_course\\R_class_in_vs_code\\"
setwd(pp)
dat <- read.csv(file = "Persian_file.txt", sep = ";", header = TRUE,
encoding = "UTF-8")
head(dat)
dat[1, 1]
dat <- read.csv(file = "Persian_file.txt", sep = ";", header = TRUE)
head(dat)
dat[1, 1]
